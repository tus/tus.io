const id = "2022-02-24-tus-v2.md";
						const collection = "blog";
						const slug = "2022/02/24/tus-2/";
						const body = "\nSeven years ago, in November 2015, [we announced the release of tus 1.0](/blog/2015/11/16/tus.1.0.html), the first major and stable version of our uploading protocol. In the past months, we have been actively working on the next steps for tus and wanted to share early details about **tus 2.0**.\n\ntus 2.0 will keep the same principles and approaches for how uploads are performed. This ensures that upgrading the uploading infrastructure from tus 1.0 to 2.0 is as seamless as possible for the end-users as well as for the developers. The most important changes will happen to the structure of the protocol:\n\nThe [specification of tus 1.0](/protocols/resumable-upload.html) consists of the core uploading protocol and multiple optional extensions, such as the creation extension, termination extension, and checksum extension. All of these specifications have been hosted on our website [tus.io](/) and we have been pleased to see a [wide variety of implementations](/implementations.html), in part because it is based on open standards like HTTP.\n\nLooking to the future, we'd like to further encourage native implementations of the uploading protocol in browsers and mobile platform SDKs, as well making resumable uploads accessible to more people. To that end, we would like **tus 2.0**, to be an open standard. In considering how to approach standardization, we believe that turning the core uploading protocol into a clear and concise standard within the [IETF](https://www.ietf.org/) is most appropriate. We have published a [first revision of an Internet-Draft](https://datatracker.ietf.org/doc/draft-tus-httpbis-resumable-uploads-protocol/) and are engaging with the process of formal adoption into a suitable venue at the IETF.\n\n## What will change between tus 1.0 and 2.0?\n\ntus 2.0 will keep the same uploading approach and most functionality. The most important changes will happen to the structure of the protocol:\n\nThe [specification of tus 1.0](/protocols/resumable-upload.html) consists of the core uploading protocol and multiple optional extensions, such as the creation extension, termination extension, and checksum extension. Our major goal with tus 2.0 is to turn the core uploading protocol into an [IETF](https://www.ietf.org/) Internet Standard. The tus protocol will still be open and freely accessible and usable, but with a more formal standard.\n\nFeatures that currently exist as optional extensions in tus 1.0 might not be part of the standardized upload protocol. These features will also be included in tus 2.0 as optional extensions, that live outside the standardized upload protocol. This helps ensure that the standardized upload protocol is concise and focused, while also continuing to support additional use cases.\n\n## What is the current status of tus 2.0?\n\nAs of the time of writing, we are actively working on the core uploading protocol, which will seek adoption and standardization of in the IETF. You can see the current draft at [tus.github.io/tus-v2](https://tus.github.io/tus-v2/draft-tus-httpbis-resumable-uploads-protocol.html) and join the discussion in our GitHub repository at [github.com/tus/tus-v2](https://github.com/tus/tus-v2). We have published a [first revision of an Internet-Draft](https://datatracker.ietf.org/doc/draft-tus-httpbis-resumable-uploads-protocol/) and are engaging with the process of formal adoption into a suitable venue at the IETF. Work on additional tus 2.0 extensions, that will cover the content from tus 1.0 that will not be included in the standardized upload protocol, has not been started yet.\n\n## What will happen to the client and server implementations?\n\nFor all of our [official implementations](/implementations.html), we are going to add support for tus 2.0 while also keeping support for tus 1.0. This ensures a seamless upgrade to tus 2.0 while also supporting existing users of tus 1.0.\n\nSo far, [tusd](https://github.com/tus/tusd/pull/568) and [tusdotnet](https://github.com/tusdotnet/tusdotnet/tree/POC/tus2) contain experimental support for tus 2.0. These might change however as the tus 2.0 specification matures.\n\n## Can I contribute to tus 2.0?\n\nYes, of course! Many details of tus 2.0 are not settled in stone yet. You can always check out the current state and join the discussion in our [GitHub repository](https://github.com/tus/tus-v2).\n\n## Thank you to all contributors\n\nA grateful “Thank You” goes especially to [Guoye Zhang](https://github.com/guoye-zhang), [Jiten Mehta](https://github.com/jitenmehta), [Justin Ruggles](https://github.com/justinruggles), [Lucas Pardue](https://github.com/LPardue), and [Stefan Matsson](https://github.com/smatsson). All of them have dedicated their time and efforts into working on tus 2.0. Thank you all!\n";
						const data = {title:"Towards tus 2.0",author:"acconut",date:new Date(1645660800000)};
						const _internal = {
							filePath: "/Users/nick/dev/transloadit/tus.io/src/content/blog/2022-02-24-tus-v2.md",
							rawData: "\ntitle: \"Towards tus 2.0\"\nauthor: acconut\nredirect_from: /blog/2022/02/23/tus-2/\ndate: 2022-02-24\nslug: 2022/02/24/tus-2/",
						};

export { _internal, body, collection, data, id, slug };
