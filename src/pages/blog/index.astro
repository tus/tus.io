---
import { ExternalA } from '@/components/ExternalA'
import PageFooter from '@/components/PageFooter.astro'
import Layout from '@/layouts/default.astro'
import { getAuthorHref } from '@/lib/getAuthorHref'
import { getBlogPostSlug } from '@/lib/getBlogPostSlug'
import { getFirstParagraphContent } from '@/lib/getFirstParagraph'
import { getCollection, getEntries } from 'astro:content'

const title = 'Blog'

const posts = (await getCollection('blog')).sort((a, b) => {
  return b.data.date.getTime() - a.data.date.getTime()
})

const authors = await getEntries(posts.map((post) => post.data.author))

const formatter = new Intl.DateTimeFormat('en-US', {
  year: 'numeric',
  month: 'long',
  day: 'numeric',
})
---

<Layout title={title}>
  <main class="root">
    <h1>Blog</h1>
    <ol class="list">
      {
        posts.map((post) => {
          const author = authors.find(
            (author) => author.id === post.data.author.id
          )

          return (
            <li class="item">
              <article class="post">
                <a href={`/blog/${getBlogPostSlug(post.slug)}`} class="title">
                  <h2>{post.data.title}</h2>
                </a>
                <p class={'meta'}>
                  Published on {formatter.format(post.data.date)}{' '}
                  {author && (
                    <>
                      by{' '}
                      <ExternalA href={getAuthorHref(author)}>
                        {author.data.name}
                      </ExternalA>
                    </>
                  )}
                </p>
                <div
                  class="excerpt"
                  set:html={getFirstParagraphContent(post.body)}
                />
                <a href={`/blog/${getBlogPostSlug(post.slug)}`}>
                  Read on &rarr;
                </a>
              </article>
            </li>
          )
        })
      }
    </ol>
  </main>
  <PageFooter />
</Layout>

<style>
  .root {
    max-inline-size: 50rem;
    margin: 0 auto;
    padding-inline: var(--space3);
  }

  @media screen and (width >= 768px) {
    .root {
      padding-inline: var(--space6);
    }
  }

  .list {
    margin: 0;
    padding: 0;
    display: flex;
    flex-direction: column;
    gap: var(--space6);
    list-style-type: none;
  }

  .title {
    color: var(--gray12);
  }

  .title h2 {
    font-weight: 500;
    margin-block-end: var(--space1);
  }

  .meta {
    color: var(--gray10);
    font-size: 0.875rem;
  }

  .excerpt p {
    display: -webkit-box;
    -webkit-box-orient: block-axis;
    -webkit-line-clamp: 3;
    overflow: hidden;
  }
</style>
